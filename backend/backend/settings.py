"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
from django.conf import settings  # Adicione esta linha AQUI

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-r1-3l0q-u5@t&2blri^96@fcl0l+o=*@4ei2e*841=hge*@lew'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'django_otp',
    'django_otp.plugins.otp_totp',
    'two_factor',
    'corsheaders',
    'accounts',
    'core',
    'estudantes',
    'candidaturas',
    'relatorios',
    'registration_templates',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

# Configurações do JWT
SIMPLE_JWT = {
    # Tempo de validade dos tokens
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=30),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "AUTH_HEADER_TYPES": ("Bearer",),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': False,

    # Algoritmo e chaves
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': settings.SECRET_KEY,  # Agora o 'settings' está definido
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,

    # Header de autenticação
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',

    # Dados do usuário no token
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    # Classe de token
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    # Tokens deslizantes (opcional)
    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),

    # Configurações de Cookie Seguro
    'AUTH_COOKIE': 'access_token',          # Nome do cookie
    'AUTH_COOKIE_SECURE': True,             # Apenas via HTTPS
    'AUTH_COOKIE_HTTP_ONLY': True,         # Não acessível via JS
    'AUTH_COOKIE_PATH': '/',               # Caminho padrão
    'AUTH_COOKIE_SAMESITE': 'Lax',           # Proteção CSRF básica
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django_otp.middleware.OTPMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'residencia_unicv',
        'USER': 'postgres',  # Substitua pelo seu usuário PostgreSQL
        'PASSWORD': '12345',  # Substitua pela sua senha PostgreSQL
        'HOST': 'localhost',  # Ou o endereço do seu servidor PostgreSQL
        'PORT': '5432',      # Porta padrão do PostgreSQL
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'accounts.CustomUser'

AUTHENTICATION_BACKENDS = [
   # 'accounts.authentication.EmailBackend',
    'django.contrib.auth.backends.ModelBackend',
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # ou a porta que seu react está rodando.
    "http://127.0.0.1:3000",
    "http://localhost",
    "http://127.0.0.1",
]

# Configurações de segurança
SECURE_SSL_REDIRECT = False  # Redireciona automaticamente para HTTPS
CSRF_COOKIE_SECURE = True  # Torna o CSRF Cookie seguro
CSRF_COOKIE_HTTPONLY = True  # Impede que o cookie CSRF seja acessado via JavaScript
SESSION_COOKIE_SECURE = True  # Torna o cookie de sessão seguro
X_FRAME_OPTIONS = 'DENY'  # Previne ataques de Clickjacking
SECURE_BROWSER_XSS_FILTER = True  # Ativa o filtro de XSS no navegador
SECURE_CONTENT_TYPE_NOSNIFF = True  # Previne que o navegador detecte tipos MIME
# Ativa cookies seguros
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SAMESITE = 'Lax'
CSRF_COOKIE_SAMESITE = 'Lax'
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_ALL_ORIGINS = True
CSRF_TRUSTED_ORIGINS = ['http://localhost:3000']

# Redirecionamento após o login (adicione esta linha)
LOGIN_REDIRECT_URL = '/admin/'